{"version":3,"sources":["components/Navbar.js","components/Header.js","components/Home.js","components/About.js","components/Services.js","components/Contact.js","components/Footer.js","components/Spinner.js","components/Contacts.js","components/ContactForm.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","href","to","Header","title","Home","About","className","target","Services","Contact","Footer","Spinner","Contacts","renderContent","contacts","length","map","contact","i","key","_id","firstName","lastName","company","telephon","email","ContactForm","onSubmit","e","preventDefault","formData2","axios","post","then","response","console","log","addContact","history","push","htmlFor","id","type","name","value","onChange","handleChange","placeholder","cols","rows","App","state","posts","formData1","category","content","date","editing","errors","setState","addPost","fetchData","get","data","catch","err","this","path","component","exact","render","React","Component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d9d2a64e.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nconst Navbar = props => {\n  return (\n    <div >\n      <a href='/'>\n        <h1 >Pragmatic Inteligent Consulting</h1>\n      </a>\n      <ul >\n        <li>\n          <NavLink to='/'>Home</NavLink>\n        </li>\n        <li>\n          <NavLink to='/about'>About</NavLink>\n        </li>\n        <li>\n          <NavLink to='/services'>Services</NavLink>\n        </li>\n        <li>\n          <NavLink to='/contact'>Contact</NavLink>\n        </li>\n        <li>\n          <NavLink to='/contacts'>Contacts</NavLink>\n        </li>\n        <li>\n          <a href='/api/v1.0.0/contacts'>API</a>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nNavbar.propTypes = {}\n\nexport default Navbar\n","import React from 'react'\nimport Navbar from './Navbar'\nimport PropTypes from 'prop-types'\n\nconst Header = ({ title }) => {\n  return (\n    <header>\n      <div>\n        <Navbar />\n        <h3 >{title}</h3>\n      </div>\n    </header>\n  )\n}\n\nHeader.propTypes = {}\n\nexport default Header\n","import React from 'react'\n\nimport Header from './Header'\n\nconst Home = props => {\n  return (\n    <>\n      <Header title='Pragmatic Inteligent Consulting Web Application' />\n      <main>\n       <h1>Welcome to Pragmatic Inteligent Consulting</h1>\n      </main>\n    </>\n  )\n}\n\nHome.propTypes = {}\n\nexport default Home\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Header from './Header'\n\nconst About = props => {\n  return (\n    <>\n      <Header title='About Pragmatic Inteligent Consulting' />\n      <main>\n        <div >\n          <section>\n            <h4>\n              <a href='#introduction' className='link'>\n                #\n              </a>\n              Introduction\n            </h4>\n          </section>\n        \n          <section>\n            <article>\n                <p>\n                \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n                </p>\n            </article>\n          </section>\n          <section>\n            <h4>\n              {' '}\n              <a href='#github' className='link'>\n                #\n              </a>{' '}\n              Source code of this application is on github:\n            </h4>\n            <article>\n              <p>\n                Check the code on{' '}\n                <a\n                  href='https://github.com/lizzethgd/pragma'\n                  className='link'\n                  target='_blank'\n                >\n                  github\n                </a>\n              </p>\n            </article>\n          </section>\n        </div>\n      </main>\n    </>\n  )\n}\n\nAbout.propTypes = {}\n\nexport default About\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Header from './Header'\n\nconst Services = props => {\n  return (\n    <>\n      <Header title='Our Services' />\n      <main>\n        <div>\n        <section>\n            <article>\n                \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n            </article>\n          </section>\n        </div>\n      </main>\n    </>\n  )\n}\n\nServices.propTypes = {}\n\nexport default Services","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport Header from './Header'\n\nconst Contact = props => {\n  return (\n    <>\n      <Header title='Contac Us' />\n      <main>\n        <div>\n          <p>We value your ideas and help you find a better way to proceed</p>\n\n          <NavLink to={`/contact/contac_form`}>Contact Form</NavLink>\n          \n          <address>\n            Pragmatic Inteligent Consulting  <br />\n            Finland, Helsinki <br />\n            02210 <br />\n            +358451000000 <br />\n            Finland\n          </address>\n        </div>\n      </main>\n    </>\n  )\n}\n\nContact.propTypes = {}\n\nexport default Contact\n//<i className='far fa-edit'></i>","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Footer = props => {\n  return (\n    <footer>\n      <div >\n        <small>\n        <b>Pragmatic Inteligent Consulting App &copy; 2020></b>\n        </small>\n      </div>\n    </footer>\n  )\n}\n\nFooter.propTypes = {}\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Header from './Header'\nimport Footer from './Footer'\n\nconst Spinner = props => {\n  return (\n    <div className='main-wrapper'>\n      <h1>Loading.</h1>\n    </div>\n  )\n}\n\nSpinner.propTypes = {}\n\nexport default Spinner\n","import React from 'react'\n//import { NavLink } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport Header from './Header'\nimport Spinner from './Spinner'\n\nconst Contacts = props => {\n\n  \n  let renderContent\n\n    if (props.contacts.length) {\n      renderContent = props.contacts.map((contact, i) => (\n        <div key={contact._id} >\n           <h4>{contact.firstName} {contact.lastName}</h4>\n            <p>{contact.company}</p>\n            <p>{contact.telephon}</p>\n            <p>{contact.email}</p>\n        </div>\n      ))\n    } else {\n      renderContent = <Spinner />\n    }\n\n  return (\n    <>\n      <Header title='Our Contacts' />\n      <main>\n        <div >\n          <div >{renderContent}</div>\n        </div>\n      </main>\n    </>\n  )\n}\n\nContacts.propTypes = {}\n\nexport default Contacts\n","import React from 'react'\nimport axios from 'axios'\nimport PropTypes from 'prop-types'\nimport Header from './Header'\n\nconst ContactForm = props => {\n  const handleSubmit = e => {\n    e.preventDefault()\n    const formData2 = props.formData2\n    const url = 'http://localhost:5000/api/v1.0.0/contacts'\n    axios.post(url, formData2).then(response => {\n      console.log(response)\n      console.log('saved')\n    })\n    props.addContact(formData2)\n    props.history.push('/contacts')\n  }\n\n  return (\n    <>\n      <Header title='Contact Form' />\n      <main>\n        <div className='main-wrapper'>\n          <form onSubmit={handleSubmit}>\n            <div className='form-group'>\n              <label htmlFor='firstName'>First Name</label>\n              <input\n                id='firstName'\n                type='text'\n                name='firstName'\n                value={props.formData2.firstName}\n                onChange={props.handleChange}\n                placeholder='First name'\n              />\n            </div>\n            <div className='form-group'>\n              <label htmlFor='lastName'>Last Name</label>\n              <input\n                id='lastName'\n                type='text'\n                name='lastName'\n                value={props.formData2.lastName}\n                onChange={props.handleChange}\n                placeholder='Last name'\n              />\n            </div>\n            <div className='form-group'>\n              <label htmlFor='companycountry'>Company</label>\n              <input\n                id='company'\n                type='text'\n                name='company'\n                value={props.formData2.company}\n                onChange={props.handleChange}\n                placeholder='Company'\n              />\n            </div>\n\n            <div className='form-group'>\n              <label htmlFor='telephon'>Telephon</label>\n              <input\n                type='text'\n                id='telephon'\n                name='telephon'\n                value={props.formData2.telephon}\n                onChange={props.handleChange}\n                placeholder='Telephone'\n              />\n            </div>\n            <div className='form-group'>\n              <label htmlFor='email'>Email</label>\n              <input\n                id='email'\n                name='email'\n                cols='120'\n                rows='10'\n                value={props.formData2.email}\n                onChange={props.handleChange}\n                placeholder='Email'\n              ></input>\n            </div>\n\n            <button className='btn' type='submit' id='submit-button'>\n              Send\n            </button>\n          </form>\n        </div>\n      </main>\n    </>\n  )\n}\n\nContactForm.propTypes = {}\n\nexport default ContactForm\n","import React from 'react'\nimport axios from 'axios'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Home from './components/Home'\nimport About from './components/About'\nimport Services from './components/Services'\nimport Contact from './components/Contact'\nimport Contacts from './components/Contacts'\nimport ContactForm from './components/ContactForm'\nimport Footer from './components/Footer'\n//import Students from './components/Students'\n//import StudentDetail from './components/StudentDetail'\n//import AddStudent from './components/AddStudent'\n//import EditStudent from './components/EditStudent'\n\n// AWS, Google cloud, Azure, Heroku, Digital Ocean, \n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    formData1: {\n      title: '',\n      category: '',\n      content: '',\n      date: ''\n    },\n    contacts: [],\n    formData2: {\n      firstName: '',\n      lastName: '',\n      company: '',\n      telephon: '',\n      email: ''\n    },\n    editing: false,\n    errors: {}\n  }\n  componentDidMount() {\n    this.fetchData()\n  }\n  handleChange = e => {\n    const { name, value } = e.target\n    //const formData1 = { ...this.state.formData1, [name]: value }\n    //this.setState({ formData1 })\n    const formData2 = { ...this.state.formData2, [name]: value }\n    this.setState({ formData2 })\n  }\n  addPost= post => {\n    this.fetchData()\n    const formData1 = {\n      title: '',\n      category: '',\n      content: '',\n      date: ''\n    }\n    this.setState({ formData1 })\n  }\n\n  addContact = contact => {\n    this.fetchData()\n    const formData2 = {\n      firstName: '',\n      lastName: '',\n      company: '',\n      telephon: '',\n      email: ''\n    }\n    this.setState({ formData2 })\n    console.log(this.state)\n  }\n\n\n\n  fetchData = () => {\n\n  const url = 'http://localhost:5000/api/v1.0.0/contacts'\n    axios\n      .get(url)\n      .then(response => {\n        this.setState({ contacts: response.data })\n        console.log(response)\n      })\n      .catch(err => {\n        console.log(err.response.data)\n        this.setState({ err: err.response.data })\n      })\n  }\n\n  /*\n\n  editStudent = student => {\n    this.setState({ editing: true })\n  }\n  updateStudent = formData => {\n    this.setState({ formData, editing: false })\n    this.fetchData()\n  }\n  deleteStudent = () => {\n    this.fetchData()\n  }\n\n  */\n\n  render() {\n    const { posts, formData1, contacts, formData2 } = this.state\n\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route path='/about' component={About} />\n          <Route path='/services' component={Services} />\n          <Route exact path='/contact/contac_form' render={props => ( <ContactForm {...props} formData2={formData2}\n            handleChange={this.handleChange} addContact={this.addContact} /> )} />\n          <Route path='/contacts' render={() => <Contacts contacts={contacts} />} />\n          <Route path='/contact' component={Contact} />\n          <Route path='/' component={Home} />\n        </Switch>\n        <Footer />\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App\n\n/* \n    <Route exact path='/posts/add'\n            render={props => ( <AddPost {...props}\n                formData1={formData1}\n                handleChange={this.handleChange}\n                addPost={this.addPost}\n              />\n            )}\n\n<Route\n            exact\n            path='/students/edit/:id'\n            render={props => (\n              <EditStudent\n                {...props}\n                handleChange={this.handleChange}\n                updateStudent={this.updateStudent}\n                formData={formData}\n                students={students}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path='/students/:id'\n            component={props => (\n              <StudentDetail\n                {...props}\n                deleteStudent={this.deleteStudent}\n                editing={this.editStudent}\n                students={students}\n              />\n            )}\n          />\n          <Route\n            path='/students'\n            render={() => <Students students={students} />}\n          />\n          */","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}